[
  {
    "cli": "ps",
    "cmd": "docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'",
    "description": "Formatted ps for running dockers",
    "color": false
  },
  {
    "cli": "ps-a",
    "alias": "psa",
    "cmd": "docker ps -a --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'",
    "description": "Formatted ps for all dockers",
    "color": false
  },
  {
    "cli": "remove-containers",
    "alias": "rc",
    "cmd": "docker ps -aq | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker rm -f {}; else xargs docker rm -f; fi",
    "description": "Remove all containers"
  },
  {
    "cli": "remove-images",
    "alias": "ri",
    "cmd": "docker images -q | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker rmi -f {}; else xargs docker rmi -f; fi",
    "description": "Remove all images"
  },
  {
    "cli": "remove-none-images",
    "cmd": "docker images -qf dangling=true | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker rmi -f {}; else xargs docker rmi -f; fi",
    "description": "Remove none images"
  },
  {
    "cli": "remove-exited-containers",
    "alias": "rec",
    "cmd": "docker ps -qf status=exited | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker rm -f {}; else xargs docker rm -f; fi",
    "description": "Remove exited containers"
  },
  {
    "cli": "remove-volumes",
    "cmd": "docker volume ls -qf dangling=true | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker volume rm {}; else xargs docker volume rm; fi",
    "description": "Remove all named volumes"
  },
  {
    "cli": "kill-containers",
    "alias": "kc",
    "cmd": "docker ps -q | if [ \"$(uname)\" == \"Linux\" ]; then xargs -I {} --no-run-if-empty docker kill {}; else xargs docker kill; fi",
    "description": "Kill all containers"
  },
  {
    "cli": "create-local-registry",
    "alias": "clr",
    "cmd": "docker run -d -p 5000:5000 --restart=always --name local-registry registry:2",
    "description": "Create a local registry"
  }
]
