[
  {
    "cli": "ps",
    "cmd": "docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'",
    "description": "Formatted ps",
    "color": false
  },
  {
    "cli": "remove-containers",
    "cmd": "docker ps -aq | awk '{print $1}' | xargs docker rm -f'",
    "description": "Remove all containers"
  },
  {
    "cli": "remove-images",
    "cmd": "docker rmi -f $(docker images -q)",
    "description": "Remove all images"
  },
  {
    "cli": "remove-none-images",
    "cmd": "docker images | grep \"^<none>\" | awk '{print $3}' | xargs -I {} --no-run-if-empty docker rmi {} || true",
    "description": "Remove none images"
  },
  {
    "cli": "remove-exited-containers",
    "cmd": "docker rm $(docker ps -q -f status=exited)",
    "description": "Remove exited containers"
  },
  {
    "cli": "remove-volumes",
    "cmd": "docker volume rm $(docker volume ls -qf dangling=true)",
    "description": "Remove all named volumes"
  },
  {
    "cli": "kill-containers",
    "cmd": "docker ps -aq | awk '{print $1} | docker kill'",
    "description": "Kill all containers"
  },
  {
    "cli": "create-local-registry",
    "cmd": "docker run -d -p 5000:5000 --restart=always --name local-registry registry:2",
    "description": "Create a local registry"
  }
]
